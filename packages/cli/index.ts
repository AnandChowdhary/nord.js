import { readdir as readDir, writeFile } from "fs/promises";
import { resolve } from "path";

console.log("Generating nord.gen.ts");

async function* getTypeScriptFiles(dir: string): AsyncGenerator<string> {
  const files = await readDir(dir, { withFileTypes: true });
  for (const file of files) {
    const res = resolve(dir, file.name);
    if (file.isDirectory()) {
      yield* getTypeScriptFiles(res);
    } else {
      yield res;
    }
  }
}

const routes = [];

for await (const path of getTypeScriptFiles("../../examples/nodejs/routes")) {
  const relativePath = path.replace(
    resolve("../../examples/nodejs/routes"),
    ""
  );
  const slug = relativePath
    .slice(0, -3)
    .split("/")
    .reverse()
    .join("_")
    .slice(0, -1);
  routes.push({
    slug,
    path: relativePath,
  });
}

await writeFile(
  "../../examples/nodejs/nord.gen.ts",
  `// This file is generated by Nord.js
// Do not edit this file directly
import type { Manifest } from "nordjs";
${routes
  .map(
    (route) => `import ${route.slug} from "./routes${route.path.slice(0, -3)}";`
  )
  .join("\n")}

export const routes: Manifest = {
${routes
  .map(
    (route) => `  ${route.slug}: {
    method: "${route.slug.split("_")[0].toLocaleLowerCase()}",
    path: "${route.path}",
    route: ${route.slug},
  },`
  )
  .join("\n")}
};
`
);
